@tailwind base;
@tailwind components;
@tailwind utilities;
@import 'fonts';
@import 'modal';
@import 'panel';

html * {
    font-family: Poppins, sans-serif;
}

.nav {
    @apply flex gap-5 ml-20 justify-start flex-1;

    li {
        @apply flex;

        a {
            @apply flex items-center gap-2 duration-300 transition-all px-2 py-1 rounded-md;

            &:hover {
                @apply scale-105 bg-primary bg-opacity-5
            }
        }
    }
}

//hide number input  arrows
/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}


.child-font-inter * {
    @apply font-inter;
}
.child-font-poppins * {
    @apply font-inter;
}

.child-m-auto * {
    @apply m-auto;
}

.flex-center {
    justify-content: center;
    align-items: center;
}

@mixin createVariants($apply, $dynamicapply, $className, $start, $per, $end) {
    @for $i from 0 to calc($end / $per) {
        .#{$className}-#{$start+$per*$i} {
            @if $dynamicapply=='duration' {
                @apply #{$apply} #{'duration-[#{$start+$per*$i}ms]'}

            }

            @else {
                @apply #{$apply}
            }
        }

        //children all trans use
        .child-all-#{$className}-#{$start+$per*$i} *{
            @if $dynamicapply=='duration' {
                @apply #{$apply} #{'duration-[#{$start+$per*$i}ms]'}

            }

            @else {
                @apply #{$apply}
            }
        }
    }
}

@mixin useColorPalette($className, $color, $attribute) {
    @for $i from 1 to 9 {
        .#{$className}-#{$color}-#{$i*100} {
            * {
                @apply #{'#{$attribute}-#{$color}-#{$i*100}'};

            }

            &:hover * {
                @apply opacity-30;
            }
        }
    }
}

@include createVariants('transition-all', 'duration', 'trans', 100, 100, 900);
@include useColorPalette('svg', 'gray', 'fill');